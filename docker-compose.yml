version: "3.3"
services:

  frontend:
    build:
      context: ./app/frontend/exchange
      dockerfile: Dockerfile
    volumes:
      - './app/frontend/exchange:/app'
      - '/app/node_modules'
    ports:
      - 8070:8070

  backend:
    build:
      context: ./app/backend/app
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
       - ./app/backend/app/app:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    ports:
      - "7352:7352"
    command: bash -c "alembic upgrade head && gunicorn src.main:app --reload --workers 3 --worker-class uvicorn.workers.UvicornWorker --timeout 30 --bind 0.0.0.0:7352"

  exchange:
    build:
      context: ./app/backend/app
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env
    command: python src/tasks/get_exchange_markets.py

  redis:
    build:
      context: ./app/redis
      dockerfile: Dockerfile
    hostname: redis
    ports:
      - "6389:6389"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
#    volumes:
#      - redis_data:/var/lib/redis-stack/

  celery_worker:
    build:
      context: ./app/backend/app
      dockerfile: ./Dockerfile
    volumes:
      - ./app/celery:/app/celery
    command: /bin/bash /app/celery/start_celery_task.sh
    env_file:
      - .env
    depends_on:
      - redis
    links:
      - redis

  celery_beat:
    build:
      context: ./app/backend/app
      dockerfile: Dockerfile
    command: celery -A src.worker beat --loglevel=INFO
    env_file:
      - .env
    depends_on:
      - redis
  db:
    image: postgres:15.1-alpine
    volumes:
      - ./app/init:/docker-entrypoint-initdb.d:ro
      - ./app/init/postgresCustom.conf:/var/lib/postgresql/data/postgresql.conf
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "6543:5432"
    env_file:
      - .env
volumes:
  postgres_data: